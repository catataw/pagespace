✓ Populate some data, and test a query.
✓ Nested population with Model.populate, _ref notation (page._template), get template and start rendering
✓ Read possible urls from db and add as ready promise
✓ Implement rest apis for parts, pages, templates
✓ First time setup
✓ Authorization and login (passport, bcrypt)
✓ Page map https://www.astuteo.com/slickmap/demo/
✓ Add/edit page admin page
✓ Template admin page
✓ Refactor handlers. api emits event on change. update urls to resolve
✓ Parts admin page
✓ bunyan logging
✓ visual templates
✓ pretty ui
✓ logout
✓ build process
✓ Remember me login
✓ error resistance
✓ restructure parts and templates
✓ edit mode ui
✓ publishing
✓ media uploads
✓ template properties
✓ unit tests
✓ form validations
✓ change admin password / user management
✓ rename _admin to _dashboard
✓ site settings
✓ serve statics
* orange tea

✓ Custom user starter parts?
✓ Starter parts
    ✓ html (in page)
    ✓ html (blog)
    * navigation
    ✓ html include
✓ select template as dropdown
✓ links on sitemap
✓ re-order pages
✓ populate part data with predefined
✓ add developer & editor role
✓ hide advanced config from non dev roles
* docs

* Select media image from ck picker
* archiving
✓ Dashboard color switcher
* Auto determine template regions
* Multiple parts per region

BUGS
* edit link in web copy
✓ can edit in live mode

PRODUCTION CHECKLIST
✓ Full code review
✓ Logging review
✓ Caching
✓ unit tests
✓ OTT
✓ Test perf (jmeter)
✓ Publish npm
* Security checks

✓ When selecting a part, pop in template, populate the default data
✓ Do same in page

CACHE POINTS
- development:
    - change a template
    - change a part view

- editor
    - change part module data
